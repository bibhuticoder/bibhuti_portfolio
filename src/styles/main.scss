// @tailwind base;
// @tailwind components;
// @tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200;0,300;0,400;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,600;1,700;1,800;1,900&display=swap");

@layer base {
    body {
        /* font-family: "Nunito", sans-serif; */
        @apply font-Nunito;
        @apply text-black;
        @apply bg-app-white;
    }

    h1 {
        @apply text-3xl;
        @apply font-bold;
    }
    h2 {
        @apply text-2xl;
        @apply font-bold;
    }

    .highlight,
    a.active {
        &::after {
            display: block;
            content: "";
            margin-top: -0.4rem;
            width: 100%;
            // margin-left: -5%;
            height: 0.2rem;
            @apply bg-green;
        }

        &.--no-highlight {
            &::after {
                display: none;
            }
        }
    }

    // code
    .shiki {
        padding: 1rem;
        border-radius: 0.25rem;

        span {
            font-family: monospace !important;
        }
    }

    // blog post
    .blogPost {
        .shiki {
            padding: 1rem;
            border-radius: 0.25rem;
        }

        p {
            @apply mb-8;
        }

        img {
            @apply mx-auto;
            @apply my-4;
        }
    }
}

.snip {
    position: relative;

    @mixin triangle($size, $color, $direction) {
        height: 0;
        width: 0;

        $width: nth($size, 1);
        $height: nth($size, length($size));

        $foreground-color: nth($color, 1);
        $background-color: transparent !default;
        @if (length($color) == 2) {
            $background-color: nth($color, 2);
        }

        @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
            $width: $width / 2;

            @if $direction == up {
                border-left: $width solid $background-color;
                border-right: $width solid $background-color;
                border-bottom: $height solid $foreground-color;
            } @else if $direction == right {
                border-top: $width solid $background-color;
                border-bottom: $width solid $background-color;
                border-left: $height solid $foreground-color;
            } @else if $direction == down {
                border-left: $width solid $background-color;
                border-right: $width solid $background-color;
                border-top: $height solid $foreground-color;
            } @else if $direction == left {
                border-top: $width solid $background-color;
                border-bottom: $width solid $background-color;
                border-right: $height solid $foreground-color;
            }
        } @else if ($direction == up-right) or ($direction == up-left) {
            border-top: $height solid $foreground-color;

            @if $direction == up-right {
                border-left: $width solid $background-color;
            } @else if $direction == up-left {
                border-right: $width solid $background-color;
            }
        } @else if ($direction == down-right) or ($direction == down-left) {
            border-bottom: $height solid $foreground-color;

            @if $direction == down-right {
                border-left: $width solid $background-color;
            } @else if $direction == down-left {
                border-right: $width solid $background-color;
            }
        } @else if ($direction == inset-up) {
            border-width: $height $width;
            border-style: solid;
            border-color: $background-color $background-color $foreground-color;
        } @else if ($direction == inset-down) {
            border-width: $height $width;
            border-style: solid;
            border-color: $foreground-color $background-color $background-color;
        } @else if ($direction == inset-right) {
            border-width: $width $height;
            border-style: solid;
            border-color: $background-color $background-color $background-color $foreground-color;
        } @else if ($direction == inset-left) {
            border-width: $width $height;
            border-style: solid;
            border-color: $background-color $foreground-color $background-color $background-color;
        }
    }

    [class^="ribbon-"] {
        position: relative;
        &:before,
        &:after {
            content: "";
            position: absolute;
        }
    }

    .hole {
        @apply absolute;
        @apply bg-app-white;
        @apply shadow-inner;
        position: absolute;
        top: 0.25rem;
        left: 0.25rem;
        height: 0.5rem;
        width: 0.5rem;
        border-radius: 50%;
    }

    .ribbon-bottom {
        position: absolute;
        bottom: 0.25rem;

        width: auto;
        height: 1rem;
        @apply bg-green;
        left: -8px;
        @apply text-white;
        // @apply text-sm;
        @apply text-xs;
        &:before {
            @include triangle(0.5rem, darken(#82b540, 15%), down-right);
            top: -0.5rem;
        }
        &:after {
            @include triangle(1rem 1rem, #82b540, right);
            right: -1rem;
        }
    }

    span.tag{
        transition: all 0.25s;
    }
    &:hover{
        span.tag{
            @apply mr-2;
        }
    }
}
